{"version":3,"file":"main.d534a92f5eabed95efc9.hot-update.js","mappings":"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","sources":["webpack://react_ecommerce_theme/./js/src/components/NodeReadWrite.jsx","webpack://react_ecommerce_theme/webpack/runtime/getFullHash"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchWithCSRFToken } from \"../utils/fetch\";\r\nimport NodeAdd from \"./NodeAdd\";\r\nimport NodeEdit from \"./NodeEdit\";\r\nimport NodeDelete from \"./NodeDelete\";\r\n\r\n/**\r\n * Helper function to validate data retrieved from JSON:API.\r\n */\r\nfunction isValidData(data) {\r\n    if (data === null) {\r\n        return false;\r\n    }\r\n    if (data.data === undefined ||\r\n        data.data === null ||\r\n        data.data.length === 0) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * Component for displaying an individual article, with optional admin features.\r\n */\r\nconst NodeItem = ({ id, drupal_internal__nid, title, body, contentList, updateContent }) => {\r\n    const [showAdminOptions, setShowAdminOptions] = useState(false);\r\n\r\n    function handleClick(event) {\r\n        event.preventDefault();\r\n        setShowAdminOptions(!showAdminOptions)\r\n    }\r\n\r\n    function onEditSuccess(data) {\r\n        // Replace the edited item in the list with updated values.\r\n        const idx = contentList.findIndex(item => item.id === data.id);\r\n        console.log('index', { idx, data, content: contentList });\r\n        contentList[idx] = data;\r\n        updateContent([...contentList]);\r\n    }\r\n\r\n    function onDeleteSuccess(id) {\r\n        // Remove the deleted item from the list.\r\n        const list = contentList.filter(item => item.id !== id);\r\n        updateContent([...list]);\r\n    }\r\n\r\n    // Show the item with admin options.\r\n    if (showAdminOptions) {\r\n        return (\r\n            <div>\r\n                <hr />\r\n                Admin options for {title}\r\n                <NodeEdit\r\n                    id={id}\r\n                    title={title}\r\n                    body={body.value}\r\n                    onSuccess={onEditSuccess}\r\n                />\r\n                <hr />\r\n                <button onClick={handleClick}>\r\n                    cancel\r\n                </button>\r\n                <NodeDelete\r\n                    id={id}\r\n                    title={title}\r\n                    onSuccess={onDeleteSuccess}\r\n                />\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Show just the item.\r\n    return (\r\n        <div>\r\n            <a href={`/node/${drupal_internal__nid}`}>{title}</a>\r\n            {\" -- \"}\r\n            <button onClick={handleClick}>\r\n                edit\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\n/**\r\n * Component to render when there are no articles to display.\r\n */\r\nconst NoData = () => (\r\n    <div>No articles found.</div>\r\n);\r\n\r\n/**\r\n * Display a list of Drupal article nodes.\r\n *\r\n * Retrieves articles from Drupal's JSON:API and then displays them along with\r\n * admin features to create, update, and delete articles.\r\n */\r\nconst NodeReadWrite = () => {\r\n    const [content, updateContent] = useState([]);\r\n    const [filter, setFilter] = useState(null);\r\n    const [showNodeAdd, setShowNodeAdd] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // This should point to your local Drupal instance. Alternatively, for React\r\n        // applications embedded in a Drupal theme or module this could also be set\r\n        // to a relative path.\r\n        const API_ROOT = '/jsonapi/';\r\n        const url = `${API_ROOT}node/article?fields[node--article]=id,drupal_internal__nid,title,body&sort=-created&page[limit]=10`;\r\n\r\n        const headers = new Headers({\r\n            Accept: 'application/vnd.api+json',\r\n        });\r\n\r\n        // Note the use of fetch() and not fetchWithCSRFToken() here. This works\r\n        // because you don't need a CSRF token if you're only performing read\r\n        // operations.\r\n        fetch(url, { headers })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (isValidData(data)) {\r\n                    // Initialize the list of content with data retrieved from Drupal.\r\n                    updateContent(data.data);\r\n                }\r\n            })\r\n            .catch(err => console.log('There was an error accessing the API', err));\r\n    }, []);\r\n\r\n    // Handle updates to state when a node is added.\r\n    function onNodeAddSuccess(data) {\r\n        // Add the new item to the top of the list.\r\n        content.unshift(data);\r\n        // Note the use of [...content] here, this is because we're\r\n        // computing new state based on previous state and need to use a\r\n        // functional update. https://reactjs.org/docs/hooks-reference.html#functional-updates\r\n        // [...content] syntax creates a new array with the values of\r\n        // content, and updates the state to that new array.\r\n        updateContent([...content]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Site content</h2>\r\n            {content.length ? (\r\n                <>\r\n                    <label htmlFor=\"filter\">Type to filter:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"filter\"\r\n                        placeholder=\"Start typing ...\"\r\n                        onChange={(event => setFilter(event.target.value.toLowerCase()))}\r\n                    />\r\n                    <hr />\r\n                    {\r\n                        // If there's a `filter` apply it to the list of nodes.\r\n                        content.filter((item) => {\r\n                            if (!filter) {\r\n                                return item;\r\n                            }\r\n\r\n                            if (filter && (item.attributes.title.toLowerCase().includes(filter) || item.attributes.body.value.toLowerCase().includes(filter))) {\r\n                                return item;\r\n                            }\r\n                        }).map((item) => (\r\n                            <NodeItem\r\n                                key={item.id}\r\n                                id={item.id}\r\n                                updateContent={updateContent}\r\n                                contentList={content}\r\n                                {...item.attributes}\r\n                            />\r\n                        ))\r\n                    }\r\n                </>\r\n            ) : (\r\n                <NoData />\r\n            )}\r\n            <hr />\r\n            {showNodeAdd ? (\r\n                <>\r\n                    <h3>Add a new article</h3>\r\n                    <NodeAdd\r\n                        onSuccess={onNodeAddSuccess}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <p>\r\n                    Don't see what you're looking for?\r\n                    <button onClick={() => setShowNodeAdd(true)}>Add a node</button>\r\n                </p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NodeReadWrite;","__webpack_require__.h = () => (\"f03cac479499a285cd55\")"],"names":["React","useEffect","useState","fetchWithCSRFToken","NodeAdd","NodeEdit","NodeDelete","isValidData","data","undefined","length","NodeItem","_ref","_s","id","drupal_internal__nid","title","body","contentList","updateContent","_useState","_useState2","_slicedToArray","showAdminOptions","setShowAdminOptions","handleClick","event","preventDefault","onEditSuccess","idx","findIndex","item","console","log","content","_toConsumableArray","onDeleteSuccess","list","filter","createElement","value","onSuccess","onClick","href","concat","_c","NoData","_c2","NodeReadWrite","_s2","_useState3","_useState4","_useState5","_useState6","setFilter","_useState7","_useState8","showNodeAdd","setShowNodeAdd","API_ROOT","url","headers","Headers","Accept","fetch","then","response","json","err","onNodeAddSuccess","unshift","Fragment","htmlFor","type","name","placeholder","onChange","target","toLowerCase","attributes","includes","map","_extends","key","_c3","$RefreshReg$"],"sourceRoot":""}