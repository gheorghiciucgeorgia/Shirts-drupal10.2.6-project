{"version":3,"file":"main.e70dd24c90db6573c2a3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAA0B;AACQ;AAElC,IAAME,OAAO,GAAG,SAAVA,OAAOA,CAAAC,IAAA;EAAA,IAAMC,SAAS,GAAAD,IAAA,CAATC,SAAS;EAAA,oBACxBJ,0DAAA,CAACC,iDAAQ;IACLK,EAAE,EAAE,IAAK;IACTF,SAAS,EAAEA;EAAU,CACxB,CAAC;AAAA,CACL;AAACG,EAAA,GALIL,OAAO;AAOb,iEAAeA,OAAO,EAAC;AAAA,IAAAK,EAAA;AAAAC,sCAAA,CAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVG;AAC0B;AAEpD,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAAP,IAAA,EAAiC;EAAA,IAA3BG,EAAE,GAAAH,IAAA,CAAFG,EAAE;IAAEK,KAAK,GAAAR,IAAA,CAALQ,KAAK;IAAEP,SAAS,GAAAD,IAAA,CAATC,SAAS;EACtC,SAASQ,SAASA,CAAA,EAAG;IACjB,OAAOC,MAAM,CAACC,OAAO,oCAAAC,MAAA,CAAoCJ,KAAK,MAAG,CAAC;EACtE;EAEA,SAASK,QAAQA,CAAA,EAAG;IAChB,IAAMC,OAAO,gCAAgC;IAC7C,IAAMC,QAAQ,4BAAAH,MAAA,CAA4BT,EAAE,CAAE;IAC9C,IAAMa,YAAY,GAAG;MACjBC,MAAM,EAAE,QAAQ;MAChBC,WAAW,EAAE,aAAa;MAC1BC,OAAO,EAAE,IAAIC,OAAO,CAAC;QACjB,QAAQ,EAAE,0BAA0B;QACpC,cAAc,EAAE,0BAA0B;QAC1C,OAAO,EAAE;MACb,CAAC;IACL,CAAC;IAED,IAAI;MACAd,gEAAkB,CAACQ,OAAO,EAAEC,QAAQ,EAAEC,YAAY,CAAC,CAC9CK,IAAI,CAAC,UAACC,QAAQ,EAAK;QAChB;QACA,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UACzB,IAAI,OAAOtB,SAAS,KAAK,UAAU,EAAE;YACjCA,SAAS,CAACE,EAAE,CAAC;UACjB;QACJ;MACJ,CAAC,CAAC;IACV,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,KAAK,CAAC;IACnC;EACJ;EAEA,oBACI3B,0DAAA;IAAQ8B,OAAO,EAAE,SAAAA,QAAAC,KAAK;MAAA,OAAInB,SAAS,CAAC,CAAC,IAAII,QAAQ,CAAC,CAAC;IAAA;EAAC,GAAC,QAE7C,CAAC;AAEjB,CAAC;AAACT,EAAA,GAtCIG,UAAU;AAwChB,iEAAeA,UAAU,EAAC;AAAA,IAAAH,EAAA;AAAAC,sCAAA,CAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACQ;AAElC,IAAMyB,QAAQ,GAAG,SAAXA,QAAQA,CAAA7B,IAAA;EAAA,IAAMG,EAAE,GAAAH,IAAA,CAAFG,EAAE;IAAEK,KAAK,GAAAR,IAAA,CAALQ,KAAK;IAAEsB,IAAI,GAAA9B,IAAA,CAAJ8B,IAAI;IAAE7B,SAAS,GAAAD,IAAA,CAATC,SAAS;EAAA,oBAC1CJ,0DAAA,CAACC,iDAAQ;IACLK,EAAE,EAAEA,EAAG;IACPK,KAAK,EAAEA,KAAM;IACbsB,IAAI,EAAEA,IAAK;IACX7B,SAAS,EAAEA;EAAU,CACxB,CAAC;AAAA,CACL;AAACG,EAAA,GAPIyB,QAAQ;AASd,iEAAeA,QAAQ,EAAC;AAAA,IAAAzB,EAAA;AAAAC,sCAAA,CAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZgB;AACY;AAEpD,IAAMN,QAAQ,GAAG,SAAXA,QAAQA,CAAAE,IAAA,EAAuC;EAAAgC,EAAA;EAAA,IAAjC7B,EAAE,GAAAH,IAAA,CAAFG,EAAE;IAAEK,KAAK,GAAAR,IAAA,CAALQ,KAAK;IAAEsB,IAAI,GAAA9B,IAAA,CAAJ8B,IAAI;IAAE7B,SAAS,GAAAD,IAAA,CAATC,SAAS;EAC1C,IAAAgC,SAAA,GAAsCF,+CAAQ,CAAC,KAAK,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9CG,YAAY,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAElC,IAAAI,UAAA,GAA4BP,+CAAQ,CAAC;MACjCQ,OAAO,EAAE,IAAI;MACbf,KAAK,EAAE,IAAI;MACXgB,OAAO,EAAE;IACb,CAAC,CAAC;IAAAC,UAAA,GAAAN,cAAA,CAAAG,UAAA;IAJKI,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EAMxB,IAAMG,aAAa,GAAG;IAClBpC,KAAK,EAAEA,KAAK,GAAGA,KAAK,GAAG,EAAE;IACzBsB,IAAI,EAAEA,IAAI,GAAGA,IAAI,GAAG;EACxB,CAAC;EACD,IAAAe,UAAA,GAA4Bd,+CAAQ,CAACa,aAAa,CAAC;IAAAE,UAAA,GAAAX,cAAA,CAAAU,UAAA;IAA5CE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EAExB,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIrB,KAAK,EAAK;IACjC,IAAAsB,aAAA,GAAwBtB,KAAK,CAACuB,MAAM;MAA5BC,IAAI,GAAAF,aAAA,CAAJE,IAAI;MAAEC,KAAK,GAAAH,aAAA,CAALG,KAAK;IACnBL,SAAS,CAAAM,aAAA,CAAAA,aAAA,KAAMP,MAAM,OAAAQ,eAAA,KAAGH,IAAI,EAAGC,KAAK,EAAE,CAAC;EAC3C,CAAC;EAED,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAI5B,KAAK,EAAK;IAC5BS,aAAa,CAAC,IAAI,CAAC;IACnBT,KAAK,CAAC6B,cAAc,CAAC,CAAC;IAEtB,IAAM3C,OAAO,gCAAgC;IAC7C,IAAMC,QAAQ,GAAGZ,EAAE,4BAAAS,MAAA,CAA4BT,EAAE,2BAA4B;IAE7E,IAAIuD,IAAI,GAAG;MACP,MAAM,EAAE;QACJ,MAAM,EAAE,eAAe;QACvB,YAAY,EAAE;UACV,OAAO,KAAA9C,MAAA,CAAKmC,MAAM,CAACvC,KAAK,CAAE;UAC1B,MAAM,EAAE;YACJ,OAAO,KAAAI,MAAA,CAAKmC,MAAM,CAACjB,IAAI,CAAE;YACzB,QAAQ,EAAE;UACd;QACJ;MACJ;IACJ,CAAC;;IAED;IACA;IACA,IAAI3B,EAAE,EAAE;MACJ;MACAuD,IAAI,CAACA,IAAI,CAACvD,EAAE,GAAGA,EAAE;IACrB;IAEA,IAAMa,YAAY,GAAG;MACjB;MACAC,MAAM,EAAEd,EAAE,GAAG,OAAO,GAAG,MAAM;MAC7Be,WAAW,EAAE,aAAa;MAC1BC,OAAO,EAAE,IAAIC,OAAO,CAAC;QACjB,QAAQ,EAAE,0BAA0B;QACpC,cAAc,EAAE,0BAA0B;QAC1C,OAAO,EAAE;MACb,CAAC,CAAC;MACFU,IAAI,EAAE6B,IAAI,CAACC,SAAS,CAACF,IAAI;IAC7B,CAAC;IAED,IAAI;MACApD,gEAAkB,CAACQ,OAAO,EAAEC,QAAQ,EAAEC,YAAY,CAAC,CAC9CK,IAAI,CAAC,UAACC,QAAQ;QAAA,OAAKA,QAAQ,CAACuC,IAAI,CAAC,CAAC;MAAA,EAAC,CACnCxC,IAAI,CAAC,UAACqC,IAAI,EAAK;QACZ;QACArB,aAAa,CAAC,KAAK,CAAC;;QAEpB;QACA,IAAIqB,IAAI,CAACI,MAAM,IAAIJ,IAAI,CAACI,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;UACvCpB,SAAS,CAAC;YACNJ,OAAO,EAAE,KAAK;YACdf,KAAK,EAAE,IAAI;YACXgB,OAAO,eAAE3C,0DAAA;cAAKmE,SAAS,EAAC;YAA0B,GAAEN,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACtD,KAAK,EAAC,IAAE,EAACkD,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,CAACG,MAAY;UAC3G,CAAC,CAAC;UACF,OAAO,KAAK;QAChB;;QAEA;QACA;QACAjB,SAAS,CAACJ,aAAa,CAAC;QACxB,IAAIc,IAAI,CAACA,IAAI,CAACvD,EAAE,EAAE;UACdwC,SAAS,CAAC;YACNJ,OAAO,EAAE,IAAI;YACbC,OAAO,eAAE3C,0DAAA;cAAKmE,SAAS,EAAC;YAA2B,GAAG7D,EAAE,GAAG,SAAS,GAAG,OAAO,EAAE,IAAE,eAAAN,0DAAA,aAAK6D,IAAI,CAACA,IAAI,CAACQ,UAAU,CAAC1D,KAAU,CAAM;UAChI,CAAC,CAAC;UAEF,IAAI,OAAOP,SAAS,KAAK,UAAU,EAAE;YACjCA,SAAS,CAACyD,IAAI,CAACA,IAAI,CAAC;UACxB;QACJ;MACJ,CAAC,CAAC;IACV,CAAC,CAAC,OAAOlC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAAC;MAChDa,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;;EAED;EACA,IAAID,YAAY,EAAE;IACd,oBACIvC,0DAAA,cAAK,gBAEA,CAAC;EAEd;EAEA,oBACIA,0DAAA,cACK,CAAC6C,MAAM,CAACH,OAAO,IAAIG,MAAM,CAAClB,KAAK,kBAC5B3B,0DAAA,2BACIA,0DAAA,aAAM6C,MAAM,CAACH,OAAO,GAAG,UAAU,GAAG,OAAO,EAAE,GAAK,CAAC,EAClDG,MAAM,CAACF,OACP,CAAC,eAEV3C,0DAAA;IAAMsE,QAAQ,EAAEX;EAAa,gBACzB3D,0DAAA;IACIuD,IAAI,EAAC,OAAO;IACZgB,IAAI,EAAC,MAAM;IACXf,KAAK,EAAEN,MAAM,CAACvC,KAAM;IACpB6D,WAAW,EAAC,OAAO;IACnBC,QAAQ,EAAErB;EAAkB,CAC/B,CAAC,eACFpD,0DAAA,WAAK,CAAC,eACNA,0DAAA;IACIuD,IAAI,EAAC,MAAM;IACXmB,IAAI,EAAC,GAAG;IACRC,IAAI,EAAC,IAAI;IACTnB,KAAK,EAAEN,MAAM,CAACjB,IAAK;IACnBuC,WAAW,EAAC,MAAM;IAClBC,QAAQ,EAAErB;EAAkB,CAC/B,CAAC,eACFpD,0DAAA,WAAK,CAAC,eACNA,0DAAA;IACIuD,IAAI,EAAC,QAAQ;IACbgB,IAAI,EAAC,QAAQ;IACbf,KAAK,EAAElD,EAAE,GAAG,oBAAoB,GAAG;EAAe,CACrD,CACC,CACL,CAAC;AAEd,CAAC;AAAC6B,EAAA,CA3IIlC,QAAQ;AAAAM,EAAA,GAARN,QAAQ;AA6Id,iEAAeA,QAAQ,EAAC;AAAA,IAAAM,EAAA;AAAAC,sCAAA,CAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChJ2B;AACC;AACpB;AACE;AACI;;AAEtC;AACA;AACA;AACA,SAASsE,WAAWA,CAAChB,IAAI,EAAE;EACvB,IAAIA,IAAI,KAAK,IAAI,EAAE;IACf,OAAO,KAAK;EAChB;EACA,IAAIA,IAAI,CAACA,IAAI,KAAKiB,SAAS,IACvBjB,IAAI,CAACA,IAAI,KAAK,IAAI,IAClBA,IAAI,CAACA,IAAI,CAACK,MAAM,KAAK,CAAC,EAAE;IACxB,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf;;AAEA;AACA;AACA;AACA,IAAMa,QAAQ,GAAG,SAAXA,QAAQA,CAAA5E,IAAA,EAA8E;EAAAgC,EAAA;EAAA,IAAxE7B,EAAE,GAAAH,IAAA,CAAFG,EAAE;IAAE0E,oBAAoB,GAAA7E,IAAA,CAApB6E,oBAAoB;IAAErE,KAAK,GAAAR,IAAA,CAALQ,KAAK;IAAEsB,IAAI,GAAA9B,IAAA,CAAJ8B,IAAI;IAAEgD,WAAW,GAAA9E,IAAA,CAAX8E,WAAW;IAAEC,aAAa,GAAA/E,IAAA,CAAb+E,aAAa;EACjF,IAAA9C,SAAA,GAAgDF,+CAAQ,CAAC,KAAK,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxD+C,gBAAgB,GAAA9C,UAAA;IAAE+C,mBAAmB,GAAA/C,UAAA;EAE5C,SAASgD,WAAWA,CAACtD,KAAK,EAAE;IACxBA,KAAK,CAAC6B,cAAc,CAAC,CAAC;IACtBwB,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;EAC1C;EAEA,SAASG,aAAaA,CAACzB,IAAI,EAAE;IACzB;IACA,IAAM0B,GAAG,GAAGN,WAAW,CAACO,SAAS,CAAC,UAAAC,IAAI;MAAA,OAAIA,IAAI,CAACnF,EAAE,KAAKuD,IAAI,CAACvD,EAAE;IAAA,EAAC;IAC9DsB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE;MAAE0D,GAAG,EAAHA,GAAG;MAAE1B,IAAI,EAAJA,IAAI;MAAE6B,OAAO,EAAET;IAAY,CAAC,CAAC;IACzDA,WAAW,CAACM,GAAG,CAAC,GAAG1B,IAAI;IACvBqB,aAAa,CAAAS,kBAAA,CAAKV,WAAW,CAAC,CAAC;EACnC;EAEA,SAASW,eAAeA,CAACtF,EAAE,EAAE;IACzB;IACA,IAAMuF,IAAI,GAAGZ,WAAW,CAACa,MAAM,CAAC,UAAAL,IAAI;MAAA,OAAIA,IAAI,CAACnF,EAAE,KAAKA,EAAE;IAAA,EAAC;IACvD4E,aAAa,CAAAS,kBAAA,CAAKE,IAAI,CAAC,CAAC;EAC5B;;EAEA;EACA,IAAIV,gBAAgB,EAAE;IAClB,oBACInF,0DAAA,2BACIA,0DAAA,WAAK,CAAC,sBACY,EAACW,KAAK,eACxBX,0DAAA,CAACgC,iDAAQ;MACL1B,EAAE,EAAEA,EAAG;MACPK,KAAK,EAAEA,KAAM;MACbsB,IAAI,EAAEA,IAAI,CAACuB,KAAM;MACjBpD,SAAS,EAAEkF;IAAc,CAC5B,CAAC,eACFtF,0DAAA,WAAK,CAAC,eACNA,0DAAA;MAAQ8B,OAAO,EAAEuD;IAAY,GAAC,QAEtB,CAAC,eACTrF,0DAAA,CAACU,mDAAU;MACPJ,EAAE,EAAEA,EAAG;MACPK,KAAK,EAAEA,KAAM;MACbP,SAAS,EAAEwF;IAAgB,CAC9B,CAAC,eACF5F,0DAAA,WAAK,CACJ,CAAC;EAEd;;EAEA;EACA,oBACIA,0DAAA,2BACIA,0DAAA;IAAG+F,IAAI,WAAAhF,MAAA,CAAWiE,oBAAoB;EAAG,GAAErE,KAAS,CAAC,EACpD,MAAM,eACPX,0DAAA;IAAQ8B,OAAO,EAAEuD;EAAY,GAAC,MAEtB,CACP,CAAC;AAEd,CAAC;;AAED;AACA;AACA;AAFAlD,EAAA,CA5DM4C,QAAQ;AAAAxE,EAAA,GAARwE,QAAQ;AA+Dd,IAAMiB,MAAM,GAAG,SAATA,MAAMA,CAAA;EAAA,oBACRhG,0DAAA,cAAK,oBAAuB,CAAC;AAAA,CAChC;;AAED;AACA;AACA;AACA;AACA;AACA;AALAiG,GAAA,GAJMD,MAAM;AAUZ,IAAME,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAAAC,GAAA;EACxB,IAAA1D,UAAA,GAAiCP,+CAAQ,CAAC,EAAE,CAAC;IAAAU,UAAA,GAAAN,cAAA,CAAAG,UAAA;IAAtCiD,OAAO,GAAA9C,UAAA;IAAEsC,aAAa,GAAAtC,UAAA;EAC7B,IAAAI,UAAA,GAA4Bd,+CAAQ,CAAC,IAAI,CAAC;IAAAe,UAAA,GAAAX,cAAA,CAAAU,UAAA;IAAnC8C,MAAM,GAAA7C,UAAA;IAAEmD,SAAS,GAAAnD,UAAA;EACxB,IAAAoD,UAAA,GAAsCnE,+CAAQ,CAAC,KAAK,CAAC;IAAAoE,UAAA,GAAAhE,cAAA,CAAA+D,UAAA;IAA9CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC1B,gDAAS,CAAC,YAAM;IACZ;IACA;IACA;IACA,IAAM6B,QAAQ,GAAG,WAAW;IAC5B,IAAMC,GAAG,MAAA3F,MAAA,CAAM0F,QAAQ,uGAAoG;IAE3H,IAAMnF,OAAO,GAAG,IAAIC,OAAO,CAAC;MACxBoF,MAAM,EAAE;IACZ,CAAC,CAAC;;IAEF;IACA;IACA;IACAC,KAAK,CAACF,GAAG,EAAE;MAAEpF,OAAO,EAAPA;IAAQ,CAAC,CAAC,CAClBE,IAAI,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,CAACuC,IAAI,CAAC,CAAC;IAAA,EAAC,CACnCxC,IAAI,CAAC,UAACqC,IAAI,EAAK;MACZ,IAAIgB,WAAW,CAAChB,IAAI,CAAC,EAAE;QACnB;QACAqB,aAAa,CAACrB,IAAI,CAACA,IAAI,CAAC;MAC5B;IACJ,CAAC,CAAC,SACI,CAAC,UAAAgD,GAAG;MAAA,OAAIjF,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEgF,GAAG,CAAC;IAAA,EAAC;EAC/E,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,SAASC,gBAAgBA,CAACjD,IAAI,EAAE;IAC5B;IACA6B,OAAO,CAACqB,OAAO,CAAClD,IAAI,CAAC;IACrB;IACA;IACA;IACA;IACA;IACAqB,aAAa,CAAAS,kBAAA,CAAKD,OAAO,CAAC,CAAC;EAC/B;EAEA,oBACI1F,0DAAA,2BACIA,0DAAA,aAAI,cAAgB,CAAC,EACpB0F,OAAO,CAACxB,MAAM,gBACXlE,0DAAA,CAAAA,uDAAA,qBACIA,0DAAA;IAAOiH,OAAO,EAAC;EAAQ,GAAC,iBAAsB,CAAC,eAC/CjH,0DAAA;IACIuE,IAAI,EAAC,MAAM;IACXhB,IAAI,EAAC,QAAQ;IACbiB,WAAW,EAAC,kBAAkB;IAC9BC,QAAQ,EAAG,SAAAA,SAAA1C,KAAK;MAAA,OAAIqE,SAAS,CAACrE,KAAK,CAACuB,MAAM,CAACE,KAAK,CAAC0D,WAAW,CAAC,CAAC,CAAC;IAAA;EAAE,CACpE,CAAC,eACFlH,0DAAA,WAAK,CAAC;EAEF;EACA0F,OAAO,CAACI,MAAM,CAAC,UAACL,IAAI,EAAK;IACrB,IAAI,CAACK,MAAM,EAAE;MACT,OAAOL,IAAI;IACf;IAEA,IAAIK,MAAM,KAAKL,IAAI,CAACpB,UAAU,CAAC1D,KAAK,CAACuG,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrB,MAAM,CAAC,IAAIL,IAAI,CAACpB,UAAU,CAACpC,IAAI,CAACuB,KAAK,CAAC0D,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrB,MAAM,CAAC,CAAC,EAAE;MAC/H,OAAOL,IAAI;IACf;EACJ,CAAC,CAAC,CAAC2B,GAAG,CAAC,UAAC3B,IAAI;IAAA,oBACRzF,0DAAA,CAAC+E,QAAQ,EAAAsC,QAAA;MACLC,GAAG,EAAE7B,IAAI,CAACnF,EAAG;MACbA,EAAE,EAAEmF,IAAI,CAACnF,EAAG;MACZ4E,aAAa,EAAEA,aAAc;MAC7BD,WAAW,EAAES;IAAQ,GACjBD,IAAI,CAACpB,UAAU,CACtB,CAAC;EAAA,CACL,CAEP,CAAC,gBAEHrE,0DAAA,CAACgG,MAAM,MAAE,CACZ,eACDhG,0DAAA,WAAK,CAAC,EACLuG,WAAW,gBACRvG,0DAAA,CAAAA,uDAAA,qBACIA,0DAAA,aAAI,mBAAqB,CAAC,eAC1BA,0DAAA,CAACE,gDAAO;IACJE,SAAS,EAAE0G;EAAiB,CAC/B,CACH,CAAC,gBAEH9G,0DAAA,YAAG,oCAEC,eAAAA,0DAAA;IAAQ8B,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAM0E,cAAc,CAAC,IAAI,CAAC;IAAA;EAAC,GAAC,YAAkB,CAChE,CAEN,CAAC;AAEd,CAAC;AAACL,GAAA,CA/FID,aAAa;AAAAqB,GAAA,GAAbrB,aAAa;AAiGnB,iEAAeA,aAAa,EAAC;AAAA,IAAA3F,EAAA,EAAA0F,GAAA,EAAAsB,GAAA;AAAA/G,sCAAA,CAAAD,EAAA;AAAAC,sCAAA,CAAAyF,GAAA;AAAAzF,sCAAA,CAAA+G,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClM7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACyB;AACc;;AAEvC;AACqD;AACE;AAEvD,IAAMG,IAAI,GAAG,SAAPA,IAAIA,CAAA;EAAA,oBACR1H,0DAAA,CAACyH,gEAAY,MAAE,CAAC;AAAA,CACjB;;AAED;AAAAlH,EAAA,GAJMmH,IAAI;AAKV,IAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;;AAEtD;AACA,IAAIF,SAAS,EAAE;EACb;EACA,IAAMG,IAAI,GAAGN,wDAAmB,CAACG,SAAS,CAAC;;EAE3C;EACAG,IAAI,CAACE,MAAM,eAAChI,0DAAA,CAAC0H,IAAI,MAAE,CAAC,CAAC;AACvB,CAAC,MAAM;EACL9F,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAC;AAClD;AAAC,IAAApB,EAAA;AAAAC,sCAAA,CAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAME,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIQ,OAAO,EAAEC,QAAQ,EAAEC,YAAY,EAAK;EACnE,IAAI,CAACA,YAAY,CAACG,OAAO,CAAC2G,GAAG,CAAC,cAAc,CAAC,EAAE;IAC7C,OAAOrB,KAAK,CAAC3F,OAAO,CAAC,CAClBO,IAAI,CAAC,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACyG,IAAI,CAAC,CAAC;IAAA,EAAC,CACjC1G,IAAI,CAAC,UAAC2G,SAAS,EAAK;MACnBhH,YAAY,CAACG,OAAO,CAAC8G,MAAM,CAAC,cAAc,EAAED,SAAS,CAAC;MACtD,OAAOvB,KAAK,CAAC1F,QAAQ,EAAEC,YAAY,CAAC;IACtC,CAAC,CAAC;EACN,CAAC,MACI;IACH,OAAOyF,KAAK,CAAC1F,QAAQ,EAAEC,YAAY,CAAC;EACtC;AACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCxBH","sources":["webpack://react_ecommerce_theme/./js/src/components/NodeAdd.jsx","webpack://react_ecommerce_theme/./js/src/components/NodeDelete.jsx","webpack://react_ecommerce_theme/./js/src/components/NodeEdit.jsx","webpack://react_ecommerce_theme/./js/src/components/NodeForm.jsx","webpack://react_ecommerce_theme/./js/src/components/NodeReadWrite.jsx","webpack://react_ecommerce_theme/./js/src/index.jsx","webpack://react_ecommerce_theme/./js/src/utils/fetch.js","webpack://react_ecommerce_theme/webpack/runtime/getFullHash"],"sourcesContent":["import React from \"react\";\r\nimport NodeForm from './NodeForm';\r\n\r\nconst NodeAdd = ({ onSuccess }) => (\r\n    <NodeForm\r\n        id={null}\r\n        onSuccess={onSuccess}\r\n    />\r\n);\r\n\r\nexport default NodeAdd;","import React from \"react\";\r\nimport { fetchWithCSRFToken } from \"../utils/fetch\";\r\n\r\nconst NodeDelete = ({ id, title, onSuccess }) => {\r\n    function doConfirm() {\r\n        return window.confirm(`Are you sure you want to delete ${title}?`);\r\n    }\r\n\r\n    function doDelete() {\r\n        const csrfUrl = `/session/token?_format=json`;\r\n        const fetchUrl = `/jsonapi/node/article/${id}`;\r\n        const fetchOptions = {\r\n            method: 'DELETE',\r\n            credentials: 'same-origin',\r\n            headers: new Headers({\r\n                'Accept': 'application/vnd.api+json',\r\n                'Content-Type': 'application/vnd.api+json',\r\n                'Cache': 'no-cache'\r\n            }),\r\n        };\r\n\r\n        try {\r\n            fetchWithCSRFToken(csrfUrl, fetchUrl, fetchOptions)\r\n                .then((response) => {\r\n                    // Should be 204. If so, call the onSuccess callback.\r\n                    if (response.status === 204) {\r\n                        if (typeof onSuccess === 'function') {\r\n                            onSuccess(id);\r\n                        }\r\n                    }\r\n                });\r\n        } catch (error) {\r\n            console.log('API error', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button onClick={event => doConfirm() && doDelete()}>\r\n            delete\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default NodeDelete;","import React from \"react\";\r\nimport NodeForm from \"./NodeForm\";\r\n\r\nconst NodeEdit = ({ id, title, body, onSuccess }) => (\r\n    <NodeForm\r\n        id={id}\r\n        title={title}\r\n        body={body}\r\n        onSuccess={onSuccess}\r\n    />\r\n);\r\n\r\nexport default NodeEdit;","import React, { useState } from \"react\";\r\nimport { fetchWithCSRFToken } from \"../utils/fetch\";\r\n\r\nconst NodeForm = ({ id, title, body, onSuccess }) => {\r\n    const [isSubmitting, setSubmitting] = useState(false);\r\n\r\n    const [result, setResult] = useState({\r\n        success: null,\r\n        error: null,\r\n        message: '',\r\n    });\r\n\r\n    const defaultValues = {\r\n        title: title ? title : '',\r\n        body: body ? body : '',\r\n    };\r\n    const [values, setValues] = useState(defaultValues);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        setSubmitting(true);\r\n        event.preventDefault();\r\n\r\n        const csrfUrl = `/session/token?_format=json`;\r\n        const fetchUrl = id ? `/jsonapi/node/article/${id}` : `/jsonapi/node/article`;\r\n\r\n        let data = {\r\n            \"data\": {\r\n                \"type\": \"node--article\",\r\n                \"attributes\": {\r\n                    \"title\": `${values.title}`,\r\n                    \"body\": {\r\n                        \"value\": `${values.body}`,\r\n                        \"format\": 'plain_text',\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        // If we have an ID that means we're editing an existing node and not\r\n        // creating a new one.\r\n        if (id) {\r\n            // Set the ID in the data we'll send to the API.\r\n            data.data.id = id;\r\n        }\r\n\r\n        const fetchOptions = {\r\n            // Use HTTP PATCH for edits, and HTTP POST to create new articles.\r\n            method: id ? 'PATCH' : 'POST',\r\n            credentials: 'same-origin',\r\n            headers: new Headers({\r\n                'Accept': 'application/vnd.api+json',\r\n                'Content-Type': 'application/vnd.api+json',\r\n                'Cache': 'no-cache'\r\n            }),\r\n            body: JSON.stringify(data),\r\n        };\r\n\r\n        try {\r\n            fetchWithCSRFToken(csrfUrl, fetchUrl, fetchOptions)\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    // We're done processing.\r\n                    setSubmitting(false);\r\n\r\n                    // If there are any errors display the error and return early.\r\n                    if (data.errors && data.errors.length > 0) {\r\n                        setResult({\r\n                            success: false,\r\n                            error: true,\r\n                            message: <div className=\"messages messages--error\">{data.errors[0].title}: {data.errors[0].detail}</div>,\r\n                        });\r\n                        return false;\r\n                    }\r\n\r\n                    // If the request was successful, remove existing form values and\r\n                    // display a success message.\r\n                    setValues(defaultValues);\r\n                    if (data.data.id) {\r\n                        setResult({\r\n                            success: true,\r\n                            message: <div className=\"messages messages--status\">{(id ? 'Updated' : 'Added')}: <em>{data.data.attributes.title}</em></div>,\r\n                        });\r\n\r\n                        if (typeof onSuccess === 'function') {\r\n                            onSuccess(data.data);\r\n                        }\r\n                    }\r\n                });\r\n        } catch (error) {\r\n            console.log('Error while contacting API', error);\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    // If the form is currently being processed display a spinner.\r\n    if (isSubmitting) {\r\n        return (\r\n            <div>\r\n                Processing ...\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {(result.success || result.error) &&\r\n                <div>\r\n                    <h2>{(result.success ? 'Success!' : 'Error')}:</h2>\r\n                    {result.message}\r\n                </div>\r\n            }\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    name=\"title\"\r\n                    type=\"text\"\r\n                    value={values.title}\r\n                    placeholder=\"Title\"\r\n                    onChange={handleInputChange}\r\n                />\r\n                <br />\r\n                <textarea\r\n                    name=\"body\"\r\n                    rows=\"4\"\r\n                    cols=\"30\"\r\n                    value={values.body}\r\n                    placeholder=\"Body\"\r\n                    onChange={handleInputChange}\r\n                />\r\n                <br />\r\n                <input\r\n                    name=\"submit\"\r\n                    type=\"submit\"\r\n                    value={id ? 'Edit existing node' : 'Add new node'}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NodeForm;","import React, { useEffect, useState } from \"react\";\r\nimport { fetchWithCSRFToken } from \"../utils/fetch\";\r\nimport NodeAdd from \"./NodeAdd\";\r\nimport NodeEdit from \"./NodeEdit\";\r\nimport NodeDelete from \"./NodeDelete\";\r\n\r\n/**\r\n * Helper function to validate data retrieved from JSON:API.\r\n */\r\nfunction isValidData(data) {\r\n    if (data === null) {\r\n        return false;\r\n    }\r\n    if (data.data === undefined ||\r\n        data.data === null ||\r\n        data.data.length === 0) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * Component for displaying an individual article, with optional admin features.\r\n */\r\nconst NodeItem = ({ id, drupal_internal__nid, title, body, contentList, updateContent }) => {\r\n    const [showAdminOptions, setShowAdminOptions] = useState(false);\r\n\r\n    function handleClick(event) {\r\n        event.preventDefault();\r\n        setShowAdminOptions(!showAdminOptions)\r\n    }\r\n\r\n    function onEditSuccess(data) {\r\n        // Replace the edited item in the list with updated values.\r\n        const idx = contentList.findIndex(item => item.id === data.id);\r\n        console.log('index', { idx, data, content: contentList });\r\n        contentList[idx] = data;\r\n        updateContent([...contentList]);\r\n    }\r\n\r\n    function onDeleteSuccess(id) {\r\n        // Remove the deleted item from the list.\r\n        const list = contentList.filter(item => item.id !== id);\r\n        updateContent([...list]);\r\n    }\r\n\r\n    // Show the item with admin options.\r\n    if (showAdminOptions) {\r\n        return (\r\n            <div>\r\n                <hr />\r\n                Admin options for {title}\r\n                <NodeEdit\r\n                    id={id}\r\n                    title={title}\r\n                    body={body.value}\r\n                    onSuccess={onEditSuccess}\r\n                />\r\n                <hr />\r\n                <button onClick={handleClick}>\r\n                    cancel\r\n                </button>\r\n                <NodeDelete\r\n                    id={id}\r\n                    title={title}\r\n                    onSuccess={onDeleteSuccess}\r\n                />\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Show just the item.\r\n    return (\r\n        <div>\r\n            <a href={`/node/${drupal_internal__nid}`}>{title}</a>\r\n            {\" -- \"}\r\n            <button onClick={handleClick}>\r\n                edit\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\n/**\r\n * Component to render when there are no articles to display.\r\n */\r\nconst NoData = () => (\r\n    <div>No articles found.</div>\r\n);\r\n\r\n/**\r\n * Display a list of Drupal article nodes.\r\n *\r\n * Retrieves articles from Drupal's JSON:API and then displays them along with\r\n * admin features to create, update, and delete articles.\r\n */\r\nconst NodeReadWrite = () => {\r\n    const [content, updateContent] = useState([]);\r\n    const [filter, setFilter] = useState(null);\r\n    const [showNodeAdd, setShowNodeAdd] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // This should point to your local Drupal instance. Alternatively, for React\r\n        // applications embedded in a Drupal theme or module this could also be set\r\n        // to a relative path.\r\n        const API_ROOT = '/jsonapi/';\r\n        const url = `${API_ROOT}node/article?fields[node--article]=id,drupal_internal__nid,title,body&sort=-created&page[limit]=10`;\r\n\r\n        const headers = new Headers({\r\n            Accept: 'application/vnd.api+json',\r\n        });\r\n\r\n        // Note the use of fetch() and not fetchWithCSRFToken() here. This works\r\n        // because you don't need a CSRF token if you're only performing read\r\n        // operations.\r\n        fetch(url, { headers })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (isValidData(data)) {\r\n                    // Initialize the list of content with data retrieved from Drupal.\r\n                    updateContent(data.data);\r\n                }\r\n            })\r\n            .catch(err => console.log('There was an error accessing the API', err));\r\n    }, []);\r\n\r\n    // Handle updates to state when a node is added.\r\n    function onNodeAddSuccess(data) {\r\n        // Add the new item to the top of the list.\r\n        content.unshift(data);\r\n        // Note the use of [...content] here, this is because we're\r\n        // computing new state based on previous state and need to use a\r\n        // functional update. https://reactjs.org/docs/hooks-reference.html#functional-updates\r\n        // [...content] syntax creates a new array with the values of\r\n        // content, and updates the state to that new array.\r\n        updateContent([...content]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Site content</h2>\r\n            {content.length ? (\r\n                <>\r\n                    <label htmlFor=\"filter\">Type to filter:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"filter\"\r\n                        placeholder=\"Start typing ...\"\r\n                        onChange={(event => setFilter(event.target.value.toLowerCase()))}\r\n                    />\r\n                    <hr />\r\n                    {\r\n                        // If there's a `filter` apply it to the list of nodes.\r\n                        content.filter((item) => {\r\n                            if (!filter) {\r\n                                return item;\r\n                            }\r\n\r\n                            if (filter && (item.attributes.title.toLowerCase().includes(filter) || item.attributes.body.value.toLowerCase().includes(filter))) {\r\n                                return item;\r\n                            }\r\n                        }).map((item) => (\r\n                            <NodeItem\r\n                                key={item.id}\r\n                                id={item.id}\r\n                                updateContent={updateContent}\r\n                                contentList={content}\r\n                                {...item.attributes}\r\n                            />\r\n                        ))\r\n                    }\r\n                </>\r\n            ) : (\r\n                <NoData />\r\n            )}\r\n            <hr />\r\n            {showNodeAdd ? (\r\n                <>\r\n                    <h3>Add a new article</h3>\r\n                    <NodeAdd\r\n                        onSuccess={onNodeAddSuccess}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <p>\r\n                    Don't see what you're looking for?\r\n                    <button onClick={() => setShowNodeAdd(true)}>Add a node</button>\r\n                </p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NodeReadWrite;","//From the component Creating a component DrupalProjectStats\r\n// import React from 'react'\r\n// import ReactDOM from 'react-dom/client'\r\n\r\n// /* Import Components */\r\n// import DrupalProjectStats from './components/DrupalProjectStats';\r\n\r\n// const Main = () => (\r\n//   <DrupalProjectStats projectName=\"drupal\" />\r\n// );\r\n\r\n// // Get the container for your app.\r\n// const container = document.getElementById('react-app');\r\n\r\n// // Check if the container exists to avoid null errors.\r\n// if (container) {\r\n//   // Create a root.\r\n//   const root = ReactDOM.createRoot(container);\r\n\r\n//   // Render the Main component.\r\n//   root.render(<Main />);\r\n// } else {\r\n//   console.error('Failed to find the root element');\r\n// }\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\n\r\n/* Import Components */\r\nimport NodeListOnly from \"./components/NodeListOnly\";\r\nimport NodeReadWrite from \"./components/NodeReadWrite\";\r\n\r\nconst Main = () => (\r\n  <NodeListOnly />\r\n);\r\n\r\n// Get the container for your app.\r\nconst container = document.getElementById('react-app');\r\n\r\n// Check if the container exists to avoid null errors.\r\nif (container) {\r\n  // Create a root.\r\n  const root = ReactDOM.createRoot(container);\r\n\r\n  // Render the Main component.\r\n  root.render(<Main />);\r\n} else {\r\n  console.error('Failed to find the root element');\r\n}","/**\r\n * Helper function wraps a normal fetch call with a fetch request that first\r\n * retrieves a CSRF token and then adds the token as an X-CSRF-Token header\r\n * to the options for desired fetch call.\r\n *\r\n * @param {string} csrfUrl\r\n *   URL where we can retrieve a CSRF token for the current user.\r\n * @param {string} fetchUrl\r\n *   URL to fetch with X-CSRF-Token header included.\r\n * @param {object} fetchOptions\r\n *   Options to pass to fetch for the call to fetchUrl.\r\n */\r\nexport const fetchWithCSRFToken = (csrfUrl, fetchUrl, fetchOptions) => {\r\n    if (!fetchOptions.headers.get('X-CSRF-Token')) {\r\n      return fetch(csrfUrl)\r\n        .then(response => response.text())\r\n        .then((csrfToken) => {\r\n          fetchOptions.headers.append('X-CSRF-Token', csrfToken);\r\n          return fetch(fetchUrl, fetchOptions);\r\n        });\r\n    }\r\n    else {\r\n      return fetch(fetchUrl, fetchOptions);\r\n    }\r\n  };","__webpack_require__.h = () => (\"354238ca307c86622bd7\")"],"names":["React","NodeForm","NodeAdd","_ref","onSuccess","createElement","id","_c","$RefreshReg$","fetchWithCSRFToken","NodeDelete","title","doConfirm","window","confirm","concat","doDelete","csrfUrl","fetchUrl","fetchOptions","method","credentials","headers","Headers","then","response","status","error","console","log","onClick","event","NodeEdit","body","useState","_s","_useState","_useState2","_slicedToArray","isSubmitting","setSubmitting","_useState3","success","message","_useState4","result","setResult","defaultValues","_useState5","_useState6","values","setValues","handleInputChange","_event$target","target","name","value","_objectSpread","_defineProperty","handleSubmit","preventDefault","data","JSON","stringify","json","errors","length","className","detail","attributes","onSubmit","type","placeholder","onChange","rows","cols","useEffect","isValidData","undefined","NodeItem","drupal_internal__nid","contentList","updateContent","showAdminOptions","setShowAdminOptions","handleClick","onEditSuccess","idx","findIndex","item","content","_toConsumableArray","onDeleteSuccess","list","filter","href","NoData","_c2","NodeReadWrite","_s2","setFilter","_useState7","_useState8","showNodeAdd","setShowNodeAdd","API_ROOT","url","Accept","fetch","err","onNodeAddSuccess","unshift","Fragment","htmlFor","toLowerCase","includes","map","_extends","key","_c3","ReactDOM","NodeListOnly","Main","container","document","getElementById","root","createRoot","render","get","text","csrfToken","append"],"sourceRoot":""}